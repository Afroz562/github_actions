name:  Roll back preivous version image to AmazonECS

on:
  push:
    branches: [ master ]
  #pull_request:
    #branches: [ master ]

env:
  AWS_REGION: us-east-1                  # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: ecs_repo          # set this to your Amazon ECR repository name
  ECS_SERVICE: test_service              # set this to your Amazon ECS service name
  ECS_CLUSTER: fargate-cluster                # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: .github/workflows/task-definition.json # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: myapp           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition

jobs:
  deploy:
    name: Re-Deploy
    runs-on: ubuntu-latest


    steps:
      - name: Configure AWScredentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
         
      - name: Download previous image for redeployment 
        id : output
        run: |
         #aws ecr describe-repositories
          #aws ecr list-images --repository-name ecs_repo 
          aws ecr describe-images --repository-name ecs_repo  \
          --query 'sort_by(imageDetails,& imagePushedAt)[*].imageTags[0]' --output yaml \
           | tail -n 3 | awk -F'- ' '{print $2}'| 
           echo $output
           echo "::set-output name=image::$output"
          
          #docker pull 056584266475.dkr.ecr.us-east-1.amazonaws.com/ecs_repo:latest
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}
          #image: 056584266475.dkr.ecr.us-east-1.amazonaws.com/ecs_repo:latest-8

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
      
             
     
         
  

